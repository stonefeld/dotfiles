#!/bin/bash

filename="recording_$(date '+%y_%m_%d_%H_%M_%S').mkv"
filelocation="$HOME/vids/recordings"

[ ! -d "$filelocation" ] && mkdir -p "$filelocation"

run_dmenu() {
	if [ "$#" -eq 1 ]; then
		printf "$1" | dmenu -c -i -l 20 -bw 4
	else
		printf "$2" | dmenu -c -i -l 20 -bw 4 -p "$1"
	fi
}

screencast_full() {
	record "$filelocation/$filename" "$(xdpyinfo | grep dimensions | sed 's/\s\+/ /g' | cut -d ' ' -f 3)" "1280x1440"
	pkill -RTMIN+11 dwmblocks
}

screencast_single() {
	record "$filelocation/$filename"
	pkill -RTMIN+11 dwmblocks
}

launch_webcam() {
	mplayer tv:// -tv driver=v4l2:width=640:height=480:device=/dev/video0 -fps 25 -vf screenshot -vf mirror
}

killrecording() {
	recpid="$(cat /tmp/recordingpid)"
	kill -15 "$recpid"
	rm -f /tmp/recordingpid
	pkill -RTMIN+11 dwmblocks
	sleep 3
	kill -9 "$recpid"
	exit
}

askrecording() {
	if [ "$(xrandr --listactivemonitors | grep -oP 'Monitors: \K.*')" -eq 2 ]; then
		choice=$(run_dmenu "Screencast Full\\nScreencast Single\\nLaunch Webcam")
	else
		choice=$(run_dmenu "Screencast\\nLaunch Webcam")
	fi

	case "$choice" in
		"Screencast Full")   screencast_full;;
		"Screencast Single") screencast_single;;
		"Screencast")        screencast_single;;
		"Launch Webcam")     launch_webcam;;
	esac
}

asktoend() {
	choice=$(run_dmenu "Stop Recording\\nLaunch Webcam")
	case "$choice" in
		"Stop Recording") response=$(run_dmenu "Recording still active. End recording?" "No\\nYes");;
		"Launch Webcam")  launch_webcam;;
	esac
	[ "$response" = "Yes" ] && killrecording || exit
}

case "$1" in
	screencast) screencast_full;;
	*)          [ -f /tmp/recordingpid ] && asktoend || askrecording;;
esac
