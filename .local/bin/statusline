#!/bin/sh

COLORED=false

# Check if a screencast is running and display an icon to indicate its state.
[ -f /tmp/recordingpid ] && rec=" 󰝥 󰍬 | "

# Check if notifications are muted.
[ "$(dunstctl is-paused)" = "true" ] && notitf="󰂛 | "

# Display the kernel version.
kern=$(uname -r)

# Display unread emails.
mails=$(cat ${XDG_DATA_HOME:-$HOME/.local/share}/unread)

# Display number of outdated packages.
pack=$(cat ${XDG_DATA_HOME:-$HOME/.local/share}/updates)

# Get WiFi SSID.
wifi=$(iwgetid -r)
[ -z "$wifi" ] && wifi="Disconnected"

# Get current volume.
vol() {
	if ([ $(pgrep -x pulseaudio) ] || [ $(pgrep -x pipewire | sed "1q") ]); then
		info=$(amixer -D pulse sget Master | grep -oP "(Front Left|Mono):[\s]?\S*\s\K.*" | sed "s/\[//g;s/\]//g;s/%//g")
		# info=$(pactl get-sink-volume @DEFAULT_SINK@ | grep -oP "Volume:\s*front-left:\s*[0-9]*\s*\K.*" | sed "s/\%//g")
		# mute=$(pactl get-sink-mute @DEFAULT_SINK@ | grep -oP "Mute:\s*\K.*")
	else
		info=$(amixer sget Master | grep -oP "(Front Left|Mono):[\s]?\S*\s\K.*" | sed "s/\[//g;s/\]//g;s/%//g;s/\<[0-9]\+[\.]\?[0-9]\+dB\s*//g")
		# mute=$(echo $info | cut -d " " -f 3 | sed "s/off/yes")
	fi
	mute=$(echo $info | cut -d " " -f 3)
	[ "$mute" = "off" ] && echo "󰖁 Mute" && return

	vol=$(echo $info | cut -d " " -f 2)
	[ "$vol" -ge 100 ] && icon="󰕾" || icon="󰖀"
	[ "$vol" -eq 0 ] && icon="󰖁"
	echo "$icon $vol%"
}

# Calculate current brightness.
br="$(( $(sed '1!d' /sys/class/backlight/*/actual_brightness) * 100 / $(sed '1!d' /sys/class/backlight/*/max_brightness) ))"

# Get battery percentage.
bat() {
	per=$(cat /sys/class/power_supply/BAT0/capacity)
	char=$(cat /sys/class/power_supply/BAT0/status)
	[ "$char" = "Full" -o "$char" = "Charging" ] && echo "󰂄 $per%" && return

	bat=$(( $per / 10 ))
	icon="󰂃"
	case $bat in
		"0")  icon="󰂎";;
		"1")  icon="󰁺";;
		"2")  icon="󰁻";;
		"3")  icon="󰁼";;
		"4")  icon="󰁽";;
		"5")  icon="󰁾";;
		"6")  icon="󰁿";;
		"7")  icon="󰂀";;
		"8")  icon="󰂁";;
		"9")  icon="󰂂";;
		"10") icon="󰁹";;
	esac
	echo "$icon $per%"
}

# Get current formatted date.
date=$(date "+%a, %b %d (%Y) %H:%M")

# Print colors on the statusline.
color() {
	case "$1" in
		"bg") fg="^c#2e3440^" ;;
		"g1") fg="^c#3b4252^" ;;
		"g2") fg="^c#4c566a^" ;;
		"g3") fg="^c#616e88^" ;;
		"w1") fg="^c#d8dee9^" ;;
		"w2") fg="^c#e5e9f0^" ;;
		"w3") fg="^c#eceff4^" ;;
		"cy") fg="^c#88c0d0^" ;;
		"bl") fg="^c#81a1c1^" ;;
		"re") fg="^c#bf616a^" ;;
		"or") fg="^c#d08770^" ;;
		"ye") fg="^c#ebcb8b^" ;;
		"gr") fg="^c#a3be8c^" ;;
		"ma") fg="^c#b48ead^" ;;
		"pi") fg="^c#828dd1^" ;;
		"vi") fg="^c#6c77bb^" ;;
	esac
	case "$2" in
		"bg") bg="^b#292d3e^" ;;
		"bl") bg="^b#2e3440^" ;;
		"g1") bg="^b#3b4252^" ;;
		"g2") bg="^b#4c566a^" ;;
		"g3") bg="^b#616e88^" ;;
		"w1") bg="^b#d8dee9^" ;;
		"w2") bg="^b#e5e9f0^" ;;
		"w3") bg="^b#eceff4^" ;;
		"cy") bg="^b#88c0d0^" ;;
		"bl") bg="^b#81a1c1^" ;;
		"re") bg="^b#bf616a^" ;;
		"or") bg="^b#d08770^" ;;
		"ye") bg="^b#ebcb8b^" ;;
		"gr") bg="^b#a3be8c^" ;;
		"ma") bg="^b#b48ead^" ;;
		"pi") bg="^b#828dd1^" ;;
		"vi") bg="^b#6c77bb^" ;;
	esac
	echo "$fg$bg"
}

if [ "$COLORED" = true ]; then
	sl=" $(color pi bg)$rec $notitf$(color bg bg)   $(color re bg)󰻀 $kern $(color ye bg)󰇮 $mails $(color gr bg)󰬦 $pack $(color bg vi) 󰤨 $(color bg pi) $wifi $(color w1 bg) $(color re bg)󱎖 $br% $(color ye bg)$(vol) $(color gr bg)$(bat) $(color bg vi) 󱑂 $(color bg pi) $date "
else
	sl="$rec$notitf󰻀 $kern 󰇮 $mails 󰬦 $pack | 󰤨 $wifi | 󱎖 $br% $(vol) $(bat) | 󱑂 $date"
fi
xsetroot -name "$sl"
