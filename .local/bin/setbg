#!/bin/sh

RANDOM=false  # true if random picture will be selected
PYWAL=false   # true if pywal will be used

# Print the help message
print_help() {
	echo "Usage: setbg [OPTIONS...] [FILE]
OPTIONS:
\t-h --help\tprint this help message
\t-r --random\tpick a random image from the pictures folder
\t-p --pywal\tcreate a colorscheme based on the selected picture using pywal
"
}

# Print an error message, then the help message and quit
print_error() {
	echo "$1\n"
	print_help
	exit
}

# Check if a given file exists or not
check_file() {
	[ -z "$1" ] && print_error "setbg: No file specified"
	[ -f "$1" ] || print_error "setbg: '$1': No such file or directory"
}

# Set the wallpaper and copy it to the default location
set_wallpaper() {
	ext=${1##*.}
	dest="${XDG_CACHE_HOME:-$HOME/.cache}/wal.$ext"
	[ "$1" = "$dest" ] || cp "$1" "$dest"

	echo "Setting wallpaper '$(basename $1)'..."
	xwallpaper --zoom "$1"
}

# Search for an already existing default wallpaper
default_file="$(find ${XDG_CACHE_HOME:-$HOME/.cache} -maxdepth 1 -type f -name "wal.*")"

# If no argument was used, simply try to set the default wallpaper
[ -z "$*" ] && check_file "$default_file" && set_wallpaper "$default_file" && exit

# Check for flags and arguments
for i in $*; do
	case $i in
		-r|--random) RANDOM=true;;
		-p|--pywal)  PYWAL=true; command -v wal 2>/dev/null || print_error "setbg: pywal not installed";;
		-h|--help)   print_help && exit;;
		-*|--*)      print_error "setbg: Unknown argument $i";;
		*)           [ -z "$file" ] && { check_file "$i" && file="$i"; } || print_error "setbg: File already specified";;
	esac
done

# If random flag was used, search for a random wallpaper
[ "$RANDOM" = true ] && file=$(find $HOME/imgs/wallpaper -type f | shuf | head -n 1)

# If no file was specified, use the default one
[ -z "$file" ] && { check_file "$default_file" && file="$default_file"; } || rm -f "$default_file"

# Set the wallpaper
set_wallpaper "$file"

# If pywal flag was used create the colorscheme based on the wallpaper
if [ "$PYWAL" = true ]; then
	echo "Creating colorscheme..."
	wal -i "$file" -n -q

	echo "Cleaning up generated colorscheme..."
	sed '/\[SchemeUrg\]/d' -i "$HOME/.cache/wal/colors-wal-dwm.h"

	echo "Recompiling st terminal..."
	cd "$HOME/.local/src/st/" && sudo make clean install >/dev/null

	echo "Recompiling dmenu..."
	cd "$HOME/.local/src/dmenu" && sudo make clean install >/dev/null

	echo "Recompiling dwm..."
	cd "$HOME/.local/src/dwm-original/" && sudo make clean install >/dev/null
fi
