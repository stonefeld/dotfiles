#!/bin/bash

pdf_reader='xdg-open'
notes_folder="$HOME"/Documents/notes
templates_folder="$HOME"/Templates

run_dmenu() {
    if [ "$1" = '-l' ]; then
        printf "$3" | dmenu -l 20 -p "$2"
    else
        printf "$2" | dmenu -p "$1"
    fi
}

print_error() {
    echo "$(basename "$0"): $1"
    echo "Try '$(basename "$0") --help' for more information."
    exit 1
}

print_help() {
    printf "Usage: $(basename "$0") [-p | -f | -t]
\t-p\tPDF reader command (default: xdg-open)
\t-f\tNotes folder (default: ~/Documents/notes)
\t-t\tTemplates folder (default: ~/Templates)
"
    exit
}

while [ "$#" -gt "0" ]; do
    case "$1" in
        -p|--pdf_reader)
            command -v "$2" &>/dev/null || print_error "command not found: $2"
            pdf_reader="$2"
            shift 2;;

        -f|--notes_folder)
            [ -d "$2" ] || print_error "cannot access '$2': No such file or directory"
            notes_folder="$2"
            shift 2;;

        -t|--templates_folder)
            [ -d "$2" ] || print_error "cannot access '$2': No such file or directory"
            templates_folder="$2"
            shift 2;;

        -h|--help) print_help;;
        *) print_error "invalid option -- '$1'";;
    esac
done

notes="$(find "$notes_folder" -mindepth 2 -maxdepth 2 -type f -regex '.*\.\(md\|tex\)' -printf '%f\n' | sort | sed 's/\.md$/ (Markdown)/;s/\.tex$/ (LaTeX)/')"
new_note_text='Create new note'
selection="$(run_dmenu -l 'Select or create a note' "$new_note_text\\n$notes")"
[ -z "$selection" ] && exit

if [ "$selection" = "$new_note_text" ]; then
    markdown_text='Empty Markdown note (.md)'
    latex_text='Empty LaTeX note (.tex)'

    name="$(run_dmenu 'Name the new note' '')"
    [ -z "$name" ] && exit

    while [ -d "$notes_folder/$name" ]; do
        name="$(run_dmenu "A note with the name '$name' already exists" '')"
        [ -z "$name" ] && exit
    done

    templates="$(find "$templates_folder" -type f -regex '.*\.\(md\|tex\)' -printf '%P\n' | sort | sed 's/\.md$/ (Markdown)/;s/\.tex$/ (LaTeX)/')"
    template="$(run_dmenu -l "Select a template for '$name'" "$markdown_text\\n$latex_text\\n$templates")"
    [ -z "$template" ] && exit
    echo $template

    mkdir -p "$notes_folder/$name"

    case "$template" in
        'Empty '*)
            extension="$(echo "$template" | sed 's/^Empty .* note (\(\..*\))/\1/')"
            touch "$notes_folder/$name/$name$extension";;
        *)
            template="$(echo "$template" | sed 's/ (Markdown)$/.md/;s/ (LaTeX)$/.tex/')"
            extension="$(echo "$template" | sed 's/^.*\(\..*\)/\1/')"
            cp "$templates_folder/$template" "$notes_folder/$name/$name$extension";;
    esac

    termlaunch -e "$EDITOR $notes_folder/$name/$name$extension"
    exit
fi

edit_text="Edit note"
open_text="Open generated PDF"
folder_text="Open containing folder"
archive_text="Archive, compress and remove note"

extension="$(echo "$selection" | sed 's/^.*(Markdown)$/.md/;s/^.*(LaTeX)$/.tex/')"
name="$(echo "$selection" | sed 's/ (Markdown)$//;s/ (LaTeX)$//')"

options="$edit_text\\n$folder_text\\n$archive_text"
[ -f "$notes_folder/$name/$name.pdf" ] && options="$open_text\\n$options"

selection="$(run_dmenu -l "Select an action for '$name'" "$options")"
[ -z "$selection" ] && exit

case "$selection" in
    "$edit_text") termlaunch -e "$EDITOR $notes_folder/$name/$name$extension";;
    "$open_text") $pdf_reader "$notes_folder/$name/$name.pdf";;
    "$folder_text") xdg-open "$notes_folder/$name";;
    "$archive_text")
        cd "$notes_folder/$name" && rm *.aux *.fls *.log *.out *.synctex.gz *.toc
        tar czf "$notes_folder/$name.tar.gz" -C "$notes_folder" "$name"
        [ -f "$notes_folder/$name.tar.gz" ] && rm -rf "$notes_folder/$name"
        xdg-open "$notes_folder";;
esac
